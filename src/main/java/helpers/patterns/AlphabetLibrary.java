package helpers.patterns;

import java.util.concurrent.ConcurrentHashMap;

public class AlphabetLibrary {
    public static final ConcurrentHashMap<String, int[][]> alphabet = new ConcurrentHashMap<>();

    // UPPER CASE
    static {
        alphabet.put("C", new int[][]{
                {0, 0, 1, 1, 1, 0},
                {0, 1, 1, 0, 1, 1},
                {1, 1, 0, 0, 0, 0},
                {1, 1, 0, 0, 0, 0},
                {1, 1, 0, 0, 0, 0},
                {1, 1, 0, 0, 0, 0},
                {1, 1, 0, 0, 0, 0},
                {0, 1, 1, 0, 1, 1},
                {0, 0, 1, 1, 1, 0}
        });
        alphabet.put("T ", new int[][]{
                {1, 1, 1, 1, 1, 1},
                {0, 0, 1, 1, 0, 0},
                {0, 0, 1, 1, 0, 0},
                {0, 0, 1, 1, 0, 0},
                {0, 0, 1, 1, 0, 0},
                {0, 0, 1, 1, 0, 0},
                {0, 0, 1, 1, 0, 0},
                {0, 0, 1, 1, 0, 0},
                {0, 0, 1, 1, 0, 0},
                {0, 0, 1, 1, 0, 0}
        });
        alphabet.put("E", new int[][]{
                {1, 1, 1, 1, 1, 0},
                {1, 1, 0, 0, 0, 0},
                {1, 1, 0, 0, 0, 0},
                {1, 1, 0, 0, 0, 0},
                {1, 1, 1, 1, 0, 0},
                {1, 1, 0, 0, 0, 0},
                {1, 1, 0, 0, 0, 0},
                {1, 1, 0, 0, 0, 0},
                {1, 1, 1, 1, 1, 1}
        });
        alphabet.put("R", new int[][]{
                {1, 1, 1, 1, 1, 0},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 0, 1, 1, 0, 0},
                {1, 1, 1, 1, 0, 0},
                {1, 1, 1, 1, 0, 0},
                {1, 1, 0, 1, 1, 0},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1}
        });
        alphabet.put("W", new int[][]{
                {1, 1, 0, 0, 0, 0, 1, 1},
                {1, 1, 0, 0, 0, 0, 1, 1},
                {1, 1, 0, 0, 0, 0, 1, 1},
                {1, 1, 0, 0, 0, 0, 1, 1},
                {1, 1, 0, 1, 1, 0, 1, 1},
                {1, 1, 0, 1, 1, 0, 1, 1},
                {1, 1, 0, 1, 1, 0, 1, 1},
                {1, 1, 0, 1, 1, 0, 1, 1},
                {0, 1, 1, 1, 1, 1, 0, 0},
                {0, 0, 1, 1, 1, 0, 0, 0},
        });
        alphabet.put("N", new int[][]{
                {1, 1, 0, 0, 0, 1, 1},
                {1, 1, 1, 0, 0, 1, 1},
                {1, 1, 1, 1, 0, 1, 1},
                {1, 1, 1, 1, 0, 1, 1},
                {1, 1, 0, 1, 1, 1, 1},
                {1, 1, 0, 1, 1, 1, 1},
                {1, 1, 0, 1, 1, 1, 1},
                {1, 1, 0, 0, 1, 1, 1},
                {1, 1, 0, 0, 1, 1, 1},
                {1, 1, 0, 0, 0, 1, 1}
        });
    }

    // LOWER CASE
    static {
        alphabet.put("a", new int[][]{
                {0, 1, 1, 1, 1, 0},
                {1, 1, 0, 0, 1, 1},
                {0, 1, 1, 1, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {0, 1, 1, 1, 1, 1}
        });
        alphabet.put("k", new int[][]{
                {1, 1, 0, 0, 0, 0},
                {1, 1, 0, 0, 0, 0},
                {1, 1, 0, 0, 0, 0},
                {1, 1, 0, 1, 1, 0},
                {1, 1, 1, 1, 0, 0},
                {1, 1, 1, 0, 0, 0},
                {1, 1, 1, 1, 0, 0},
                {1, 1, 0, 1, 1, 0},
                {1, 1, 0, 0, 1, 1},
        });
        alphabet.put("o", new int[][]{
                {0, 1, 1, 1, 1, 0},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {0, 1, 1, 1, 1, 0}
        });
        alphabet.put("d", new int[][]{
                {0, 0, 0, 0, 1, 1},
                {0, 0, 0, 0, 1, 1},
                {0, 0, 0, 0, 1, 1},
                {0, 0, 0, 0, 1, 1},
                {0, 0, 1, 1, 1, 1},
                {0, 1, 1, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {0, 1, 1, 1, 1, 1}
        });
        alphabet.put("c", new int[][]{
                {0, 1, 1, 1, 1},
                {1, 1, 0, 0, 0},
                {1, 1, 0, 0, 0},
                {1, 1, 0, 0, 0},
                {1, 1, 0, 0, 0},
                {0, 1, 1, 1, 1},
        });
        alphabet.put("u", new int[][]{
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {0, 1, 1, 1, 1, 0}
        });
        alphabet.put("g", new int[][]{
                {0, 1, 1, 1, 1, 0},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {0, 1, 1, 1, 1, 1},
                {0, 0, 0, 0, 1, 1},
                {0, 0, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {0, 1, 1, 1, 1, 0},
        });
        alphabet.put("w", new int[][]{
                {1, 1, 0, 0, 0, 1, 1},
                {1, 1, 0, 0, 0, 1, 1},
                {1, 1, 0, 1, 0, 1, 1},
                {1, 1, 1, 1, 1, 1, 1},
                {1, 1, 1, 0, 1, 1, 1},
                {0, 1, 0, 0, 0, 1, 0},
        });
        alphabet.put("t", new int[][]{
                {1, 1, 0, 0},
                {1, 1, 0, 0},
                {1, 1, 0, 0},
                {1, 1, 1, 1},
                {1, 1, 0, 0},
                {1, 1, 0, 0},
                {1, 1, 0, 0},
                {1, 1, 0, 0},
                {0, 1, 1, 1},
        });
        alphabet.put("-", new int[][]{
                {1, 1, 1, 1, 1, 1, 1},
        });
        alphabet.put("h", new int[][]{
                {1, 1, 0, 0, 0, 0},
                {1, 1, 0, 0, 0, 0},
                {1, 1, 0, 0, 0, 0},
                {1, 1, 1, 1, 0, 0},
                {1, 1, 1, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
        });
        alphabet.put("e", new int[][]{
                {0, 1, 1, 1, 1, 0},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 1, 1, 1, 0},
                {1, 1, 0, 0, 0, 0},
                {0, 1, 1, 1, 1, 1}
        });
        alphabet.put("x", new int[][]{
                {1, 1, 0, 0, 1, 1},
                {0, 1, 1, 1, 1, 0},
                {0, 0, 1, 1, 0, 0},
                {0, 1, 1, 1, 1, 0},
                {0, 1, 1, 1, 1, 0},
                {1, 1, 0, 0, 1, 1}
        });
        alphabet.put("n", new int[][]{
                {1, 1, 1, 1, 1, 0},
                {1, 1, 1, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1}
        });
        alphabet.put("r", new int[][]{
                {1, 1, 1, 1},
                {1, 1, 1, 0},
                {1, 1, 0, 0},
                {1, 1, 0, 0},
                {1, 1, 0, 0},
                {1, 1, 0, 0}
        });
        alphabet.put("l", new int[][]{
                {1, 1},
                {1, 1},
                {1, 1},
                {1, 1},
                {1, 1},
                {1, 1},
                {1, 1},
                {1, 1},
                {1, 1}
        });
        alphabet.put("i", new int[][]{
                {1, 1},
                {0, 0},
                {1, 1},
                {1, 1},
                {1, 1},
                {1, 1},
                {1, 1},
        });
        alphabet.put("m", new int[][]{
                {0, 1, 1, 1, 1, 1, 1, 0},
                {1, 1, 0, 1, 1, 0, 1, 1},
                {1, 1, 0, 1, 1, 0, 1, 1},
                {1, 1, 0, 1, 1, 0, 1, 1},
                {1, 1, 0, 1, 1, 0, 1, 1},
                {1, 1, 0, 1, 1, 0, 1, 1},
        });
        alphabet.put("b", new int[][]{
                {1, 1, 0, 0, 0, 0},
                {1, 1, 0, 0, 0, 0},
                {1, 1, 0, 0, 0, 0},
                {1, 1, 0, 0, 0, 0},
                {1, 1, 1, 1, 0, 0},
                {1, 1, 0, 1, 1, 0},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 0, 0, 1, 1},
                {1, 1, 1, 1, 1, 0},
        });
    }
}
